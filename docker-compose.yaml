version: '3.8'
services:

  jenkins:
    image: garyttt8/jenkins:1.0.4
    container_name: jenkins
    extra_hosts:
      - "host.docker.internal:192.168.1.70"
    healthcheck:
      test: ["CMD","bash","-c","curl --head http://localhost:8080 && exit 0 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 2m
    restart: unless-stopped
    ports:
      - 8080:8080
      - 50000:50000
    environment:
      - JAVA_OPTS="-Djenkins.install.runSetupWizard=false"
      - JENKINS_OPTS="--prefix=/jenkins"
      - TZ=Asia/Singapore
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $PWD/jenkins_home:/var/jenkins_home
      - $PWD/jenkins_config_backup:/var/tmp/jenkins_config_backup
  
  # Pre-requisites for inbound agent (aka JNLP aka Java WebStart agent):
  # 1. Manage Jenkins / Configure Global Security / Agents, set 'TCP port for inbound agents' to Fixed:50000
  # 2. checked 'Agent protocols' for 'InBound TCP Agent Protocol/4 (TLS encryption)'
  # 3. click 'Apply'
  # 4. Cretae the inbound (aka JNLP) agent in jenkins GUI and mote down the connection secret
  # 5. Paste the secret in the command line here, restart the container (docker-compise stop, rm, up -d)
  jkagent01:
    image: jenkins/inbound-agent
    container_name: jkagent01
    extra_hosts:
      - "host.docker.internal:192.168.1.70"
    restart: unless-stopped
    environment:
      - TZ=Asia/Singapore
    volumes:
      - $PWD/jenkins_agent01:/home/jenkins/agent
    init: true
    command: -url http://jenkins:8080/jenkins -workDir /home/jenkins/agent f2543996aa65efb3ba539c2826abf9239e22f7da251b8c3fbd9cdd388fb953db jkagent01
    depends_on:
      - jenkins

  jkagent02:
    image: jenkins/ssh-agent
    container_name: jkagent02
    extra_hosts:
      - "host.docker.internal:192.168.1.70"
    restart: unless-stopped
    environment:
      - TZ=Asia/Singapore
      - JENKINS_AGENT_SSH_PUBKEY=ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC7WT4TBeDghSwkfKPTtfKwqWFUWuc6bqMuvEzZGxP+66/XjQpKyjtRsGPzoyHiLUua0yyse7LDKsizTvYy055F7ilxb4Oyz3Dtr0N2j1JE4dDDAmNlu2fpo8xpmrflFfMY1VBKGVoPDTQlwew3X6DTmYSdXSVxl7CbcobVGsrUkWY9f+LYGZlx+9ZmSzN+8HMrHlZ+bO+Z8b3Qv6xQiH+d856awq6H5WimsT00ynauQAQ1KuAPPELVgoguOsDDdIKPz2ZprvGvrl8FQERHZoKmBbWXVMi6Lic9T14n34/feB/oY8KqF1l2hvdDyo4I6dpccm8NC2NFY2XneJncBmNbkVaTmqCRspX1S0k/Rsvrf+7SQGoXzbID214gygHoOy0zzxeiZBRSfy4Crss/1hC0wEWEsx356mlhppx9RQlQ4oEkZ6//PvYQyfOtSwVLN2jOdif8/0Mhg+dFSWQZpE+7jKWZnoK9rqgTE1bixsDhIqYuvCdjqX0AfDOg1j2r5/s= gtay@GIGANTOR
    volumes:
      - $PWD/jenkins_agent02:/home/jenkins/agent
    depends_on:
      - jenkins

  nginx:
    image: nginx
    container_name: nginx
    extra_hosts:
      - "host.docker.internal:192.168.1.70"
    restart: unless-stopped
    environment:
      - TZ=Asia/Singapore
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $PWD/nginx_config/default.conf:/etc/nginx/conf.d/default.conf
      - $PWD/nginx_html/:/var/www/nginx/html/
      - $PWD/certs/:/etc/nginx/certs/
      - $PWD/logs/nginx/:/var/log/nginx/

  nexus3:
    image: sonatype/nexus3
    container_name: nexus3
    extra_hosts:
      - "host.docker.internal:192.168.1.70"
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      - NEXUS_CONTEXT=nexus
      - TZ=Asia/Singapore
    volumes:
      - $PWD/nexus-data/:/nexus-data/

# Not using docker volumes for bind mount, using folder for bind mount
#volumes:
  #jenkins_home: {}
  #jenkins_config_backup: {}
  #nexus-data: {}
  #nginx_confug: {}

#networks:
  #default:
  # external:
  #   name:
  #     pre_existing_network
