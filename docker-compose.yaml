# version: '3.8'
services:

  jenkins:
    image: garyttt8/jenkins:2.464-jdk17
    container_name: jenkins
    user: root
    hostname: jenkins
    # For docker-desktop user: replace the docker internal/private IP with what is shown in %windir%\system32\drivers\etc
    extra_hosts:
      - "host.docker.internal:192.168.1.4"
    healthcheck:
      test: ["CMD","bash","-c","curl --head http://localhost:8080 && exit 0 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 2m
    restart: unless-stopped
    ports:
      - 8080:8080
      - 50000:50000
    environment:
      - JAVA_OPTS="-Djenkins.install.runSetupWizard=false"
      - JENKINS_OPTS="--prefix=/jenkins"
      - TZ=Asia/Singapore
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $PWD/../jenkins_home:/var/jenkins_home
      - $PWD/../jenkins_config_backup:/var/tmp/jenkins_config_backup

  # Pre-requisites for inbound agent (aka JNLP aka Java WebStart agent):
  # 1. Manage Jenkins / Configure Global Security / Agents, set 'TCP port for inbound agents' to Fixed:50000
  # 2. checked 'Agent protocols' for 'InBound TCP Agent Protocol/4 (TLS encryption)'
  # 3. click 'Apply'
  # 4. Manage Jenkins / Nodes / Add - Create the inbound (aka JNLP) agent in jenkins GUI and note down the connection secret
  # 5. Paste the secret in the command line here, restart the container (docker-compise stop, rm, up -d)
  # 6. You could delete and remove the inbound agent to get a new secret if needed
  jkagent01:
    image: jenkins/inbound-agent:latest-jdk17
    container_name: jkagent01
    user: root
    extra_hosts:
      - "host.docker.internal:192.168.1.4"
    restart: unless-stopped
    environment:
      - TZ=Asia/Singapore
    volumes:
      - $PWD/../jenkins_agent01:/root
    init: true
    command: -url http://jenkins:8080/jenkins -workDir /home/jenkins/agent a8583cdd22fdf78e3d33d85aef34057a9e79bdd065264e3014db02d7f4ecedc2 jkagent01
    depends_on:
      - jenkins

  # Pre-requisites for SSH agent:
  # 1. Manage Jenkins / Nodes / Add - Create the SSH agent in jenkins GUI
  # 2. Launch method = Launch agent via SSH
  # 3. Add 'jenkins' type of Credentials
  # 4. Add SSH private key
  # 5. Host Key Verification Strategy = Non verifying Verification Strategy (i.e. SSH option IgnoreKnownHostsFile)
  # 6. Goto Manage Credentials of there is a need to update/replace the private key
  # 7. Add the corresponding SSH public key here
  jkagent02:
    image: jenkins/ssh-agent:latest-jdk17
    container_name: jkagent02
    user: root
    extra_hosts:
      - "host.docker.internal:192.168.1.4"
    restart: unless-stopped
    environment:
      - TZ=Asia/Singapore
      - JENKINS_AGENT_SSH_PUBKEY=ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDMvt/US0UYx0o4GJANf+V/+cja4bQzdSO5oDtUZVsKDyl8t/mOJcnyPkWOUxE8g/v7dBhrVNiEEy/41bwR8x3svOEFMou7MyemCCIsiATLwb9UZeI6JWtGi6yEwuuMlYhNzNJFJ3oSSVkx7idVGvpyP8uIWX9G1jAJPA2WYCCAYBMGN528/lbBbwAxELTT/nmkb270TU6d3EfjuAyHX1W7ZZed1fPU21zptHQxBtHwwFKCurvgqJCpPUv9cIzrgMFWUdbApX6j6RU3BNfmyAq35MLSEuq83Kdqgn3fHqE/QYunCH3DnV3dgEgXMqs5hDRBL7JkXCXfKr2P7y+8Y8XNS8SHyNUX96z9N8kOIN24I4kkpEwPZafIXMbtSoP+8rZeV7D2jFISHYhZS8ez2zg7I8LqU6xFskJxvspnIY93HRGzUK64efG5lckKZFIBT1biClr2vAtk+WFci6wDw2BkJRPgYw3CXJ/IhS+DOJ+Yg6BLb/5YtzkAo0yAt8x8rM42PnH1/zuYf6dJHlKzrdnnSerD9bUha67nryoe/x0+yqZYO3w8ur2SUC6fk1Rbi6a6w+wInpKSAEqxsHrBSM+8zVeYXZ0/LK7nSiNrCD8kAOb0aBweSoO69gk1tp1tO5ZPplrG0iDOsy0ZkOuaOzHdFAQUoF80bvzoV/w0hC1M3w== jenkins@TITANIC
    ports:
      - 2200:22
    volumes:
      - $PWD/../jenkins_agent02:/root
    depends_on:
      - jenkins

  nginx:
    image: nginx:latest
    container_name: nginx
    hostname: nginx
    extra_hosts:
      - "host.docker.internal:192.168.1.4"
    restart: unless-stopped
    environment:
      - TZ=Asia/Singapore
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $PWD/nginx_html:/var/www/nginx/html
      - $PWD/nginx_config/default.conf:/etc/nginx/conf.d/default.conf
      # https mode: so far it does not work for self-signed cert
      #- $PWD/nginx_config/nginx_example_local.conf:/etc/nginx/conf.d/default.conf
      #- $PWD/certs:/etc/nginx/certs
      #- $PWD/dhparams.pem:/etc/nginx/dhparams.pem
  nexus3:
    image: sonatype/nexus3:3.66.0
    container_name: nexus3
    user: root
    extra_hosts:
      - "host.docker.internal:192.168.1.4"
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      - NEXUS_CONTEXT=nexus
      - TZ=Asia/Singapore
    volumes:
      - $PWD/../nexus-data/:/nexus-data/

  bitbucket:
    image: atlassian/bitbucket:8.2.3
    container_name: bitbucket
    extra_hosts:
      - "host.docker.internal:192.168.1.4"
    restart: unless-stopped
    ports:
      - 7990:7990
      - 7999:7999
    environment:
      - TZ=Asia/Singapore
    volumes:
      - $PWD/../bitbucket-data:/var/atlassian/application-data/bitbucket

# Not using docker volumes for bind mount, using folder for bind mount
#volumes:
  #jenkins_home: {}
  #jenkins_config_backup: {}
  #nexus-data: {}
  #nginx_confug: {}

#networks:
  #default:
  # external:
  #   name:
  #     pre_existing_network
